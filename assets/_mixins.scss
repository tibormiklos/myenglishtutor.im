/* Useful mixins */

/* Default transitions */
@mixin transition($what: all, $time: 0.25s, $how: ease-in-out) {
  -webkit-transition: $what $time $how;
  -moz-transition:    $what $time $how;
  -ms-transition:     $what $time $how;
  -o-transition:      $what $time $how;
  transition:         $what $time $how;
}

/* Vertical align */
@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

/* Flex center */
@mixin center($position) {
  display: flex;
  
  @if $position == 'both' {
    align-items: center;
    justify-content: center;
  }
  
  @else if $position == 'vertical' {
    align-items: center;
  }
  
  @else if $position == 'horizontal' {
    justify-content: center;
  }
  
  @else if $position == 'none' {
    align-items: stretch;
    justify-content: flex-start;
  }
}

// center both vertical & horizontal

.center-both {
  @include center(both);
}

// center only vertical

.center-vertical {
  @include center(vertical);
}
  
// center only horizontal

.center-horizontal {
  @include center(horizontal);
}

// Clear both horizontal & vertical

.center-none {
  @include center(none);
}

/* Border radius */
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

/* Responsive mixin source: https://gist.github.com/peschee/5734414 */
/**
 * Responsive mixin. The media breakpoints are as defined
 * in the twitter bootstrap framework:
 *
 * - phone
 * - tablet-portrait
 * - tablet-landscape-desktop
 * - large-desktop
 *
 * Additional parameters for tagetting retina and non-retina
 * devices
 *
 * - retina
 * - non-retina
 *
 * Moreover, a specific value in px can be passed which is
 * used to generate a max-width media query.
 */
@mixin respond-to($media) {
    /* Landscape phones and down */
    @if $media == phone {
        @media (max-width: 480px) { @content; }
    }
    /* Landscape phone to portrait tablet */
    @else if $media == tablet-portrait {
        @media (max-width: 767px) {@content; }
    }
    /* Portrait tablet to landscape and desktop */
    @else if $media == tablet-landscape-desktop {
        @media (min-width: 768px) and (max-width: 979px) { @content; }
    }
    /* Large desktop */
    @else if $media == large-desktop {
        @media (min-width: 1200px) { @content; }
    }
    // Non-Retina
    @else if $media == non-retina {
        @media screen and (-webkit-max-device-pixel-ratio: 1) { @content; }
    }
    // Retina Only
    @else if $media == retina {
        @media screen and (-webkit-min-device-pixel-ratio: 2) { @content; }
    }
    // Specific max width
    @else {
        @media only screen and (max-width: #{$media}px) { @content; }
    }
}

// Button mixin
@mixin btn($btn-bg, $btn-color) {
  border-radius: $border-radius;
  border-color: $btn-color; // You'll want to customize this
  color: $btn-color;
  background: $btn-bg;
  &:hover, &:focus, &:active {
    color: $btn-bg;
    background: $btn-color;
    border-color: $btn-bg;
  }
  &.-hollow {
    background: none;
    color: $btn-bg;
    border-radius: $border-radius;
    border-color: $background; // The thickness should correspond with the thickness set above
    &:hover, &:focus, &:active {
      color: $btn-color;
      background: $btn-bg;
    }
  }
}